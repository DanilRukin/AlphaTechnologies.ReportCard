// <auto-generated />
using System;
using AlphaTechnologies.ReportCard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlphaTechnologies.ReportCard.Data.MySql.Migrations.AlphaTechnologiesRepordCardDbContext
{
    [DbContext(typeof(AlphaTechnologies.ReportCard.Data.AlphaTechnologiesRepordCardDbContext))]
    [Migration("20230527121323_InitAlphaTechnologiesRepordCardDbContext")]
    partial class InitAlphaTechnologiesRepordCardDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.ComingEntity.Coming", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("WorkStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("WorkStatusId");

                    b.ToTable("Coming", (string)null);
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.DepartmentAgregate.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRemote")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.PositionEntity.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Positions", (string)null);
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.ProductionCalendarEntity.ProductionCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<string>("_holidays")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("holidays");

                    b.HasKey("Id");

                    b.ToTable("ProductionCalendar", (string)null);
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.WorkStatusEntity.WorkStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WorkStatus", (string)null);
                });

            modelBuilder.Entity("Employee_Position", b =>
                {
                    b.Property<int>("id_employee")
                        .HasColumnType("int");

                    b.Property<int>("id_position")
                        .HasColumnType("int");

                    b.HasKey("id_employee", "id_position");

                    b.HasIndex("id_position");

                    b.ToTable("Employee_Position");
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.ComingEntity.Coming", b =>
                {
                    b.HasOne("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.Employee", null)
                        .WithMany("_comings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaTechnologies.ReportCard.Domain.WorkStatusEntity.WorkStatus", null)
                        .WithMany("_comings")
                        .HasForeignKey("WorkStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.Employee", b =>
                {
                    b.HasOne("AlphaTechnologies.ReportCard.Domain.DepartmentAgregate.Department", null)
                        .WithMany("_employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.Address", "Address", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Address");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.PersonalData", "PersonalData", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("LastName");

                            b1.Property<string>("Patronymic")
                                .HasColumnType("longtext")
                                .HasColumnName("Patronymic");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.OwnsOne("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.ServiceNumber", "ServiceNumber", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("ServiceNumber");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("PersonalData")
                        .IsRequired();

                    b.Navigation("ServiceNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("Employee_Position", b =>
                {
                    b.HasOne("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.Employee", null)
                        .WithMany()
                        .HasForeignKey("id_employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlphaTechnologies.ReportCard.Domain.PositionEntity.Position", null)
                        .WithMany()
                        .HasForeignKey("id_position")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.DepartmentAgregate.Department", b =>
                {
                    b.Navigation("_employees");
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.EmployeeAgregate.Employee", b =>
                {
                    b.Navigation("_comings");
                });

            modelBuilder.Entity("AlphaTechnologies.ReportCard.Domain.WorkStatusEntity.WorkStatus", b =>
                {
                    b.Navigation("_comings");
                });
#pragma warning restore 612, 618
        }
    }
}
